{"componentChunkName":"component---src-templates-resource-detail-index-jsx","path":"/blog/proxy-for-private-server","result":{"data":{"locales":{"edges":[{"node":{"ns":"translation","data":"{\"Documentation\":\"文档\",\"FAQ\":\"常见问题\",\"NEXT\":\"下一页\",\"PREV\":\"上一页\",\"Product List\":\"应用列表\",\"ALL\":\"全部\",\"No relevant data found\":\"未找到相关数据\",\"Get it Now\":\"立即获取\",\"Overview\":\"概述\",\"Highlights\":\"亮点\",\"Description\":\"详情\",\"Related Applications\":\"相关应用\",\"Learning Materials\":\"学习资料\",\"Classification\":\"分类\",\"Os\":\"系统\",\"Open Source License\":\"开源许可\",\"Support Language\":\"支持语言\",\"Languages\":\"编程语言\",\"Solution\":\"场景方案\",\"Resource\":\"资源\",\"Applicable Personnel\":\"适用人员\",\"Resource List\":\"资源列表\",\"Official Website\":\"官网\",\"Feedback\":\"沟通反馈\",\"Submit A Suggestion\":\"提交此应用的建议\",\"Get Professional Services\":\"获取专业服务\",\"Tags\":\"关键词\",\"Author\":\"作者\",\"Related Reading\":\"相关阅读\",\"Resource Center\":\"资源中心\",\"Challengeg\":\"挑战\",\"How do we solve it?\":\"我们如何解决?\",\"More solution\":\"更多方案\",\"Type of asset\":\"类型\",\"Categories\":\"类别\",\"Resource Download\":\"资料下载\",\"Discover Now\":\"阅读详情\",\"Become a Partner\":\"成为伙伴\",\"Invoicing\":\"开具发票\",\"7×24 Tickets\":\"7×24 工单\",\"BROWSE ALL\":\"浏览所有\",\"Services List\":\"服务列表\",\"Service Type\":\"服务类别\",\"Service Object\":\"服务对象\",\"Content directory\":\"内容目录\",\"mo\":\"月\",\"y\":\"年\",\"Benefit\":\"好处\",\"What do we do\":\"我们怎么做\",\"Cases\":\"案例\",\"Purchase and price\":\"购买与价格\",\"Service portfolio\":\"服务组合\",\"Related Services\":\"相关服务\",\"Business insight\":\"业务洞察\",\"Components\":\"相关组件\",\"Copyright\":\"© 2022 长沙网久软件有限公司版权所有 备案：<a href='https://beian.miit.gov.cn/#/Integrated/index'>湘ICP备16009117号</a>\",\"Company summary\":\"为用户提供简单的云原生应用，帮助软件开发商构建基于全球云计算的在线商业体系\",\"Applications\":\"相关应用\",\"SHARE\":\"分享至\"}","language":"zh-CN"}}]},"site":{"siteMetadata":{"copyright":"Copyright","description":"Company summary","siteUrl":"https://www.websoft9.com","socials":[{"icon":"fab fa-github social-link-icon","id":1,"link":"https://github.com/","title":"github"},{"icon":"fab fa-twitter social-link-icon","id":2,"link":"https://www.twitter.com","title":"Twitter"},{"icon":"fab fa-instagram social-link-icon","id":3,"link":"https://www.instagram.com","title":"Instagram"},{"icon":"fab fa-linkedin social-link-icon","id":4,"link":"https://www.linkedin.com","title":"Linkedin"},{"icon":"fab fa-pinterest social-link-icon","id":5,"link":"https://pinterest.com","title":"Pinterest"}]}},"RelatedReading":{"nodes":[{"id":"bd9e2836-aedb-556f-91d5-eb23e91e8891","slug":"digtal-committee-start-changsha","title":"数字经济专业委员会在长沙成立，Websoft9 助力传统企业转型","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/blog/2022/10/digtal-commit-start-cs.jpg","type":{"id":"c0003798-cdad-534f-af28-121e7d8278cb","key":"news","title":"新闻"}},{"id":"045c8c29-4e09-5f29-bbed-b29d211615fb","slug":"software-supply-chain","title":"软件供应链","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/softwarescm-feature-websoft9.png","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}},{"id":"17c4039d-5e09-55dc-9bc8-c19dfb8eff6c","slug":"open-knowledge-base","title":"知识协作","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/open-km-hero-websoft9.webp","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}}]},"allContentfulResource":{"nodes":[{"id":"960682a4-822c-5818-af58-efed09631f30","slug":"proxy-for-private-server","title":"代理服务，让私有云服务器更自由","description":null,"image":"https://images.unsplash.com/photo-1530825894095-9c184b068fcb?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDQ4fHx0ZWNofGVufDB8fHx8MTYyODczMzM0Ng&ixlib=rb-1.2.1&q=80&w=2000","type":{"id":"0a810898-e829-5004-8809-ea2fb20621d4","key":"blog","title":"博客"},"author":[{"id":"8dce9d8a-0d75-5062-a1d6-75d09e764908","title":"CEO","fullName":"Websoft9","pictureUrl":"https://libs.websoft9.com/Websoft9/logo/person/cdl.jpeg","customer":null}],"content":{"id":"823ee9db-80d5-52ab-8af2-f536e88e2e35","content":"做过运维服务工作的朋友一定有亲身经历：给政府和大型企业、事业单位做运维支持时，往往发现他们的服务器有着严格的安全管理机制，特别是有限制的访问 Internet，给运维工作带来了诸多不便。\n\n比如：服务器需要访问 Github, yum 仓库安装一些软件，如果无法访问，安装软件就非常耗时费力。 \n\n面对这种情况，有没有办法通过一些合规的技术手段，实现我们期望的网络访问方式呢？\n\n当然有的，先看看下面的整体思路。\n\n## 整体思路\n\n抛开技术不谈。我们先回顾一下我们生活中相似的例子：\n\n一个健康的人，他可以出门完成各种与衣食住行相关的事情。如果他生病了，被禁锢在病床或病房或医院内，那么他就无法自由的去活动范围之外的地方。但特殊情况下，必须离开活动空间之外，应该怎么办？  \n\n答案非常简单：委托一个健康的、并且可以自由行动的人帮他去完成这些事情。  \n\n那我们现在关注的私有云服务器访问Internet问题，其解决方案是不是也可以借鉴这种**委托**机制呢？\n\n完全可以，因为在计算机技术中，有一种比较成熟的技术方案：代理服务。它就是用于解决此类场景的最佳实践之一。\n\n![代理服务](https://libs.websoft9.com/Websoft9/blog/zh/2021/08/proxy-servertoserver.jpg)\n\n我们现在的案例中，需要分为三个步骤完成我们的目标：\n\n1. 合规准备\n2. 代理服务搭建（公有云服务器）\n3. 设置本地代理（私有云服务器）\n\n## 合规准备\n\n代理服务的使用，首先要保证合规性。一方面符合所在的单位的网络管理规范，另外一方面遵循国家相关的法律法规。\n\n1. 向网络管理员申请使用代理服务的理由和使用范围，获得同意\n2. 仔细检查代理服务访问的访问，确保符合国家网络相关法律规范\n\n> 国家对海外网络的访问有严格的法律要求，请务必做到 100% 合规\n\n## 代理服务搭建\n\n由于合规性控制问题，市场上没有可供购买的代理服务。因此，需要自行搭建代理服务。  \n\n具体的步骤如下：\n\n1. 购买一个具备正常访问互联网的云服务器（简称为：“公有云服务器”）\n\n   > 最低配置（例如：1核1G内存，带宽按量模式 100M）\n\n3. 使用 **SSH** 登录云服务器，运行如下命令搭建基本环境\n   ```\n   curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh\n   curl -L \"https://github.com/docker/compose/releases/download/1.29.0/docker-    compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n   sudo chmod +x /usr/local/bin/docker-compose\n   ln -sf /usr/local/bin/docker-compose  /usr/bin\n   sudo systemctl start docker\n   ```\n3. 运行下面的命令，下载代理服务器软件 [tinyproxy](https://github.com/Websoft9/docker-tinyproxy) 到本地\n   ```\n   git clone --depth=1 https://github.com/Websoft9/docker-tinyproxy\n   ```\n\n5. 根据所需，修改软件目录下的 .env_all 文件下如下两个参数\n   ```\n   BINDIP=35.129.77.19 # 白名单IP\n   APP_PORT=9094  # 代理端口\n   ```\n   > BINDIP 代表你的**私有云服务器的公网IP**地址（白名单），设置在此处即表明它可以使用代理服务，未设置的就无法使用代理服务\n\n6. 登录云服务器控制台，放通上面 APP_PORT 对于的端口，例如：TCP:9094\n\n8. 本地浏览器访问 *http://公有云服务器IP地址:9094*，如果显示如下反馈信息，即表明代理服务器搭建成功。\n   ```\n   Access denied\n   The administrator of this proxy has not configured it to service requests from your host.\n   Generated by tinyproxy version 1.10.0.\n   ```\n\n## 设置本地代理\n\n接下来我们为私有云服务器上设置本地代理。我们可以为Linux系统设置全局的代，也可以为指定的软件设总代理（大部分成熟的软件，都支持代理设置）。\n\n假设代理服务器的IP为：111.99.190.142，端口为：9094\n\n### 全局代理\n\n1. 登录私有云服务器，运行下面的命令创建一个代理配置文件\n   ```\n   touch /etc/profile.d/proxy.sh\n   ```\n\n2. 将下面的代码代码复制到 proxy.sh 文件，根据实际情况修改 export proxy 字段\n\n   # 代理服务器的 IP:端口\n   ```\n   export proxy=\"111.99.190.142:9094\"\n\n   export http_proxy=$proxy\n   export https_proxy=$proxy\n   export ftp_proxy=$proxy\n   export no_proxy=\"localhost, 127.0.0.1, ::1\"\n   ```\n\n3. 保存后，重启开启 Shell 终端，代理生效\n\n### 局部代理\n\n我们也可以为指定的软件单独设置代理，下面以 Git, Docker, Yum 为例进行说明。 \n\n### Git\n\n使用 SSH 直接运行如下的命令即可（代理服务的IP和端口根据实际情况修改）\n```\ngit config --global https.proxy 111.99.190.142:9094\ngit config --global https.proxy 111.99.190.142:9094\n```\n\n### Docker\n\n修改 Docker 的系统服务文件 */etc/systemd/system/docker.service*\n\n```\n[Service]\nEnvironment=\"HTTP_PROXY=111.99.190.142:9094/\"\nEnvironment=\"HTTPS_PROXY=111.99.190.142:9094/\"\n```\n\n根据实际情况修改保存后，重启 Docker 服务后生效\n\n### Yum\n\n修改 /etc/yum.conf，增加下面的代码（代理服务的IP和端口根据实际情况修改）\n```\nproxy=111.99.190.142:9094\n```\n\n## 总结\n\n委托与被委托机制，在技术领域是一个简单有效且被广泛使用基本架构哲学方法。希望读者朋友们可以举一反三，灵活驾驭它。  ","childMarkdownRemark":{"html":"<p>做过运维服务工作的朋友一定有亲身经历：给政府和大型企业、事业单位做运维支持时，往往发现他们的服务器有着严格的安全管理机制，特别是有限制的访问 Internet，给运维工作带来了诸多不便。</p>\n<p>比如：服务器需要访问 Github, yum 仓库安装一些软件，如果无法访问，安装软件就非常耗时费力。</p>\n<p>面对这种情况，有没有办法通过一些合规的技术手段，实现我们期望的网络访问方式呢？</p>\n<p>当然有的，先看看下面的整体思路。</p>\n<h2>整体思路</h2>\n<p>抛开技术不谈。我们先回顾一下我们生活中相似的例子：</p>\n<p>一个健康的人，他可以出门完成各种与衣食住行相关的事情。如果他生病了，被禁锢在病床或病房或医院内，那么他就无法自由的去活动范围之外的地方。但特殊情况下，必须离开活动空间之外，应该怎么办？</p>\n<p>答案非常简单：委托一个健康的、并且可以自由行动的人帮他去完成这些事情。</p>\n<p>那我们现在关注的私有云服务器访问Internet问题，其解决方案是不是也可以借鉴这种<strong>委托</strong>机制呢？</p>\n<p>完全可以，因为在计算机技术中，有一种比较成熟的技术方案：代理服务。它就是用于解决此类场景的最佳实践之一。</p>\n<p><img src=\"https://libs.websoft9.com/Websoft9/blog/zh/2021/08/proxy-servertoserver.jpg\" alt=\"代理服务\"></p>\n<p>我们现在的案例中，需要分为三个步骤完成我们的目标：</p>\n<ol>\n<li>合规准备</li>\n<li>代理服务搭建（公有云服务器）</li>\n<li>设置本地代理（私有云服务器）</li>\n</ol>\n<h2>合规准备</h2>\n<p>代理服务的使用，首先要保证合规性。一方面符合所在的单位的网络管理规范，另外一方面遵循国家相关的法律法规。</p>\n<ol>\n<li>向网络管理员申请使用代理服务的理由和使用范围，获得同意</li>\n<li>仔细检查代理服务访问的访问，确保符合国家网络相关法律规范</li>\n</ol>\n<blockquote>\n<p>国家对海外网络的访问有严格的法律要求，请务必做到 100% 合规</p>\n</blockquote>\n<h2>代理服务搭建</h2>\n<p>由于合规性控制问题，市场上没有可供购买的代理服务。因此，需要自行搭建代理服务。</p>\n<p>具体的步骤如下：</p>\n<ol>\n<li>\n<p>购买一个具备正常访问互联网的云服务器（简称为：“公有云服务器”）</p>\n<blockquote>\n<p>最低配置（例如：1核1G内存，带宽按量模式 100M）</p>\n</blockquote>\n</li>\n<li>\n<p>使用 <strong>SSH</strong> 登录云服务器，运行如下命令搭建基本环境</p>\n<pre><code>curl -fsSL https://get.docker.com -o get-docker.sh &#x26;&#x26; sh get-docker.sh\ncurl -L \"https://github.com/docker/compose/releases/download/1.29.0/docker-    compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nln -sf /usr/local/bin/docker-compose  /usr/bin\nsudo systemctl start docker\n</code></pre>\n</li>\n<li>\n<p>运行下面的命令，下载代理服务器软件 <a href=\"https://github.com/Websoft9/docker-tinyproxy\">tinyproxy</a> 到本地</p>\n<pre><code>git clone --depth=1 https://github.com/Websoft9/docker-tinyproxy\n</code></pre>\n</li>\n<li>\n<p>根据所需，修改软件目录下的 .env_all 文件下如下两个参数</p>\n<pre><code>BINDIP=35.129.77.19 # 白名单IP\nAPP_PORT=9094  # 代理端口\n</code></pre>\n<blockquote>\n<p>BINDIP 代表你的<strong>私有云服务器的公网IP</strong>地址（白名单），设置在此处即表明它可以使用代理服务，未设置的就无法使用代理服务</p>\n</blockquote>\n</li>\n<li>\n<p>登录云服务器控制台，放通上面 APP_PORT 对于的端口，例如：TCP:9094</p>\n</li>\n<li>\n<p>本地浏览器访问 *<a href=\"http://%E5%85%AC%E6%9C%89%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8IP%E5%9C%B0%E5%9D%80:9094*%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%BE%E7%A4%BA%E5%A6%82%E4%B8%8B%E5%8F%8D%E9%A6%88%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%8D%B3%E8%A1%A8%E6%98%8E%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E3%80%82\">http://公有云服务器IP地址:9094*，如果显示如下反馈信息，即表明代理服务器搭建成功。</a></p>\n<pre><code>Access denied\nThe administrator of this proxy has not configured it to service requests from your host.\nGenerated by tinyproxy version 1.10.0.\n</code></pre>\n</li>\n</ol>\n<h2>设置本地代理</h2>\n<p>接下来我们为私有云服务器上设置本地代理。我们可以为Linux系统设置全局的代，也可以为指定的软件设总代理（大部分成熟的软件，都支持代理设置）。</p>\n<p>假设代理服务器的IP为：111.99.190.142，端口为：9094</p>\n<h3>全局代理</h3>\n<ol>\n<li>\n<p>登录私有云服务器，运行下面的命令创建一个代理配置文件</p>\n<pre><code>touch /etc/profile.d/proxy.sh\n</code></pre>\n</li>\n<li>\n<p>将下面的代码代码复制到 proxy.sh 文件，根据实际情况修改 export proxy 字段</p>\n<h1>代理服务器的 IP:端口</h1>\n<pre><code>export proxy=\"111.99.190.142:9094\"\n\nexport http_proxy=$proxy\nexport https_proxy=$proxy\nexport ftp_proxy=$proxy\nexport no_proxy=\"localhost, 127.0.0.1, ::1\"\n</code></pre>\n</li>\n<li>\n<p>保存后，重启开启 Shell 终端，代理生效</p>\n</li>\n</ol>\n<h3>局部代理</h3>\n<p>我们也可以为指定的软件单独设置代理，下面以 Git, Docker, Yum 为例进行说明。</p>\n<h3>Git</h3>\n<p>使用 SSH 直接运行如下的命令即可（代理服务的IP和端口根据实际情况修改）</p>\n<pre><code>git config --global https.proxy 111.99.190.142:9094\ngit config --global https.proxy 111.99.190.142:9094\n</code></pre>\n<h3>Docker</h3>\n<p>修改 Docker 的系统服务文件 <em>/etc/systemd/system/docker.service</em></p>\n<pre><code>[Service]\nEnvironment=\"HTTP_PROXY=111.99.190.142:9094/\"\nEnvironment=\"HTTPS_PROXY=111.99.190.142:9094/\"\n</code></pre>\n<p>根据实际情况修改保存后，重启 Docker 服务后生效</p>\n<h3>Yum</h3>\n<p>修改 /etc/yum.conf，增加下面的代码（代理服务的IP和端口根据实际情况修改）</p>\n<pre><code>proxy=111.99.190.142:9094\n</code></pre>\n<h2>总结</h2>\n<p>委托与被委托机制，在技术领域是一个简单有效且被广泛使用基本架构哲学方法。希望读者朋友们可以举一反三，灵活驾驭它。</p>"}},"persons":null,"customers":null,"products":null,"solutions":null,"tags":null,"time":"2021-08-12","downloadUrl":null}]}},"pageContext":{"slug":"proxy-for-private-server","breadcrumb":{"location":"/blog/proxy-for-private-server","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/blog","crumbLabel":"blog"},{"pathname":"/blog/proxy-for-private-server","crumbLabel":"proxy-for-private-server"}]},"language":"zh-CN","i18n":{"language":"zh-CN","languages":["en-US","zh-CN"],"defaultLanguage":"zh-CN","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/blog/proxy-for-private-server","path":"/blog/proxy-for-private-server"}}},"staticQueryHashes":["2390569662","3367695531","3666294474","3881056605","931386620"]}