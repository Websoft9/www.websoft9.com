{"componentChunkName":"component---src-templates-resource-detail-index-jsx","path":"/blog/podman-quickstart","result":{"data":{"locales":{"edges":[{"node":{"ns":"translation","data":"{\"Documentation\":\"文档\",\"FAQ\":\"常见问题\",\"NEXT\":\"下一页\",\"PREV\":\"上一页\",\"Product List\":\"应用列表\",\"ALL\":\"全部\",\"No relevant data found\":\"未找到相关数据\",\"Get it Now\":\"立即获取\",\"Overview\":\"概述\",\"Highlights\":\"亮点\",\"Description\":\"详情\",\"Related Applications\":\"相关应用\",\"Learning Materials\":\"学习资料\",\"Classification\":\"分类\",\"Os\":\"系统\",\"Open Source License\":\"开源许可\",\"Support Language\":\"支持语言\",\"Languages\":\"编程语言\",\"Solution\":\"场景方案\",\"Resource\":\"资源\",\"Applicable Personnel\":\"适用人员\",\"Resource List\":\"资源列表\",\"Official Website\":\"官网\",\"Feedback\":\"沟通反馈\",\"Submit A Suggestion\":\"提交此应用的建议\",\"Get Professional Services\":\"获取专业服务\",\"Tags\":\"关键词\",\"Author\":\"作者\",\"Related Reading\":\"相关阅读\",\"Resource Center\":\"资源中心\",\"Challengeg\":\"挑战\",\"How do we solve it?\":\"我们如何解决?\",\"More solution\":\"更多方案\",\"Type of asset\":\"类型\",\"Categories\":\"类别\",\"Resource Download\":\"资料下载\",\"Discover Now\":\"阅读详情\",\"Become a Partner\":\"成为伙伴\",\"Invoicing\":\"开具发票\",\"7×24 Tickets\":\"7×24 工单\",\"BROWSE ALL\":\"浏览所有\",\"Services List\":\"服务列表\",\"Service Type\":\"服务类别\",\"Service Object\":\"服务对象\",\"Content directory\":\"内容目录\",\"mo\":\"月\",\"y\":\"年\",\"Benefit\":\"好处\",\"What do we do\":\"我们怎么做\",\"Cases\":\"案例\",\"Purchase and price\":\"购买与价格\",\"Service portfolio\":\"服务组合\",\"Related Services\":\"相关服务\",\"Business insight\":\"业务洞察\",\"Components\":\"相关组件\",\"Copyright\":\"© 2022 长沙网久软件有限公司版权所有 备案：<a href='https://beian.miit.gov.cn/#/Integrated/index'>湘ICP备16009117号</a>\",\"Company summary\":\"为用户提供简单的云原生应用，帮助软件开发商构建基于全球云计算的在线商业体系\",\"Applications\":\"相关应用\",\"SHARE\":\"分享至\"}","language":"zh-CN"}}]},"site":{"siteMetadata":{"copyright":"Copyright","description":"Company summary","siteUrl":"https://www.websoft9.com","socials":[{"icon":"fab fa-github social-link-icon","id":1,"link":"https://github.com/","title":"github"},{"icon":"fab fa-twitter social-link-icon","id":2,"link":"https://www.twitter.com","title":"Twitter"},{"icon":"fab fa-instagram social-link-icon","id":3,"link":"https://www.instagram.com","title":"Instagram"},{"icon":"fab fa-linkedin social-link-icon","id":4,"link":"https://www.linkedin.com","title":"Linkedin"},{"icon":"fab fa-pinterest social-link-icon","id":5,"link":"https://pinterest.com","title":"Pinterest"}]}},"RelatedReading":{"nodes":[{"id":"bd9e2836-aedb-556f-91d5-eb23e91e8891","slug":"digtal-committee-start-changsha","title":"数字经济专业委员会在长沙成立，Websoft9 助力传统企业转型","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/blog/2022/10/digtal-commit-start-cs.jpg","type":{"id":"c0003798-cdad-534f-af28-121e7d8278cb","key":"news","title":"新闻"}},{"id":"045c8c29-4e09-5f29-bbed-b29d211615fb","slug":"software-supply-chain","title":"软件供应链","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/softwarescm-feature-websoft9.png","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}},{"id":"17c4039d-5e09-55dc-9bc8-c19dfb8eff6c","slug":"open-knowledge-base","title":"知识协作","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/open-km-hero-websoft9.webp","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}}]},"allContentfulResource":{"nodes":[{"id":"62f8f8e1-56e1-5c3b-bb5f-8900176b4a7d","slug":"podman-quickstart","title":"Podman 快速入门","description":null,"image":null,"type":{"id":"0a810898-e829-5004-8809-ea2fb20621d4","key":"blog","title":"博客"},"author":[{"id":"8dce9d8a-0d75-5062-a1d6-75d09e764908","title":"CEO","fullName":"Websoft9","pictureUrl":"https://libs.websoft9.com/Websoft9/logo/person/cdl.jpeg","customer":null}],"content":{"id":"028057bf-b92b-5763-b857-abd71048d9cc","content":"今天在某云上新购一台云服务器，发现已经有了 CentOS8.2 官方镜像可选，出于对新鲜事物的好奇，我决定开始采用 CentOS8.2，即使我还没有为它的新特性做好准备。\n\n我的应用主要以单机版容器为主。因此，服务器启动的第一件事就是安装 Docker。不幸的事情发生了，我的 Docker 应用没有像 CentOS7 那样如期 running 起来。\n\n花了大量的时间排查，才找到一丝线索：CentOS8 以上的版本默认已经安装一个等同于 Docker的容器解决方案，这个就是Podman。\n\n两个容器解决在一起工作，相互打架的事情必然会发生。出于长治久安的考量，今天整个下午我展开了对 Podman 的研究，得到了如下的结论，希望这些结论能够让大家少走一点弯路。\n\n## Podman 与 Docker 哪个好？\n\n对于这种问题，我想如何没有深刻的实践是一定无法得出结论的。就我个人来说，首先，刚开始学习的时候，我也尝试先从专业博客和论坛中寻找答案。\n\n我发现 Podman 中文相关的资料非常少，同理，评价它的博客就更少了，倒是有一篇非常吸人眼球的文章，例如：[Docker 大势已去,Podman 万岁](https://blog.csdn.net/alex_yangchuansheng/article/details/102618128)。但认真阅读它，却没有特别有价值的对比，完全是一种主观的表达。因此，我们不要被他人的文章所引导（误导）而形成一种偏见。\n\nPodman 是 RedHat 为了抢占容器标准的一种战略产品，这就是我的看法。\n\n## Podman 兼容 Docker吗？\n\n大部分是兼容的，例如：\n\n1. 可以直接使用 Docker 镜像\n2. 命令非常相似\n\n如果你非常怀念 docker命令，甚至可以给 Podman 设置别名为 docker：\n\n```\necho \"alias docker=podman\" >> .bashrc\nsource .bashrc\n```\n\n## Podman 镜像\n\n### 默认镜像库\n\n文件 */etc/containers/registries.conf* 是设置镜像地址配置文件，默认会搜索 ['registry.access.redhat.com', 'registry.redhat.io', 'docker.io', 'quay.io']\n等几个镜像库。\n\n不过，这几个镜像库下载速度非常慢，可以说是基本无法顺利的将镜像拉下来。\n\n所以，需要修改修改镜像库配置文件，也就是大家说的**镜像加速**方案。\n\n### 镜像加速\n\n只需2个步骤实现镜像加速：\n\n1. 改名并备份好文件：*/etc/containers/registries.conf*\n2. 再新建一个空的 *registries.conf* 文件，插入如下内容\n   ```\n   unqualified-search-registries = [\"docker.io\"]\n   [[registry]]\n   prefix = \"docker.io\"\n   location = \"******.mirror.aliyuncs.com\"\n   ```\n3. 修改 location\n   * 网易：https://hub-mirror.c.163.com/\n   * 阿里云：https://<你的ID>.mirror.aliyuncs.com\n   * 七牛云加速器：https://reg-mirror.qiniu.com\n4. 保存\n\n## Podman Compose\n\nPodman Compose 等同于 Docker Compose，是用于固化容器运行参数以及协调容器之间的关系的一种较为简单的方案。\n\n使用如下的命令，安装 Podman Compose，并根据自己的喜好设置别名（如果仍然忘不了 docker）\n\n```\npip3 install podman-compose\necho \"alias docker-compose=podman-compose\" >> .bashrc\nsource .bashrc\n```\n\n## Podman 外网\n\n如果以普通用户运行容器，此容器默认无法被外网访问，为了避免不必要的麻烦，建议以root用户创建并运行容器。\n\n另外，run 容器的时候，请勿使用 `-p 0.0.0.0:9090:80` 这种端口映射方式，它会导致容器无法被外网访问。如果采用正常的端口映射方式 `-p :9090:80`，就没有任何问题。\n\n```\n#无法被外网访问\nsudo podman run --name phpmyadmin  --restart=always  -itd  -p 0.0.0.0:9090:80  -e PMA_HOST=10.88.0.1  phpmyadmin/phpmyadmin\n\n#可以被外网访问\nsudo podman run --name phpmyadmin  --restart=always  -itd  -p 9090:80  -e PMA_HOST=10.88.0.1  phpmyadmin/phpmyadmin\n```","childMarkdownRemark":{"html":"<p>今天在某云上新购一台云服务器，发现已经有了 CentOS8.2 官方镜像可选，出于对新鲜事物的好奇，我决定开始采用 CentOS8.2，即使我还没有为它的新特性做好准备。</p>\n<p>我的应用主要以单机版容器为主。因此，服务器启动的第一件事就是安装 Docker。不幸的事情发生了，我的 Docker 应用没有像 CentOS7 那样如期 running 起来。</p>\n<p>花了大量的时间排查，才找到一丝线索：CentOS8 以上的版本默认已经安装一个等同于 Docker的容器解决方案，这个就是Podman。</p>\n<p>两个容器解决在一起工作，相互打架的事情必然会发生。出于长治久安的考量，今天整个下午我展开了对 Podman 的研究，得到了如下的结论，希望这些结论能够让大家少走一点弯路。</p>\n<h2>Podman 与 Docker 哪个好？</h2>\n<p>对于这种问题，我想如何没有深刻的实践是一定无法得出结论的。就我个人来说，首先，刚开始学习的时候，我也尝试先从专业博客和论坛中寻找答案。</p>\n<p>我发现 Podman 中文相关的资料非常少，同理，评价它的博客就更少了，倒是有一篇非常吸人眼球的文章，例如：<a href=\"https://blog.csdn.net/alex_yangchuansheng/article/details/102618128\">Docker 大势已去,Podman 万岁</a>。但认真阅读它，却没有特别有价值的对比，完全是一种主观的表达。因此，我们不要被他人的文章所引导（误导）而形成一种偏见。</p>\n<p>Podman 是 RedHat 为了抢占容器标准的一种战略产品，这就是我的看法。</p>\n<h2>Podman 兼容 Docker吗？</h2>\n<p>大部分是兼容的，例如：</p>\n<ol>\n<li>可以直接使用 Docker 镜像</li>\n<li>命令非常相似</li>\n</ol>\n<p>如果你非常怀念 docker命令，甚至可以给 Podman 设置别名为 docker：</p>\n<pre><code>echo \"alias docker=podman\" >> .bashrc\nsource .bashrc\n</code></pre>\n<h2>Podman 镜像</h2>\n<h3>默认镜像库</h3>\n<p>文件 <em>/etc/containers/registries.conf</em> 是设置镜像地址配置文件，默认会搜索 ['registry.access.redhat.com', 'registry.redhat.io', 'docker.io', 'quay.io']\n等几个镜像库。</p>\n<p>不过，这几个镜像库下载速度非常慢，可以说是基本无法顺利的将镜像拉下来。</p>\n<p>所以，需要修改修改镜像库配置文件，也就是大家说的<strong>镜像加速</strong>方案。</p>\n<h3>镜像加速</h3>\n<p>只需2个步骤实现镜像加速：</p>\n<ol>\n<li>改名并备份好文件：<em>/etc/containers/registries.conf</em></li>\n<li>再新建一个空的 <em>registries.conf</em> 文件，插入如下内容\n<pre><code>unqualified-search-registries = [\"docker.io\"]\n[[registry]]\nprefix = \"docker.io\"\nlocation = \"******.mirror.aliyuncs.com\"\n</code></pre>\n</li>\n<li>修改 location\n<ul>\n<li>网易：<a href=\"https://hub-mirror.c.163.com/\">https://hub-mirror.c.163.com/</a></li>\n<li>阿里云：https://&#x3C;你的ID>.mirror.aliyuncs.com</li>\n<li>七牛云加速器：<a href=\"https://reg-mirror.qiniu.com\">https://reg-mirror.qiniu.com</a></li>\n</ul>\n</li>\n<li>保存</li>\n</ol>\n<h2>Podman Compose</h2>\n<p>Podman Compose 等同于 Docker Compose，是用于固化容器运行参数以及协调容器之间的关系的一种较为简单的方案。</p>\n<p>使用如下的命令，安装 Podman Compose，并根据自己的喜好设置别名（如果仍然忘不了 docker）</p>\n<pre><code>pip3 install podman-compose\necho \"alias docker-compose=podman-compose\" >> .bashrc\nsource .bashrc\n</code></pre>\n<h2>Podman 外网</h2>\n<p>如果以普通用户运行容器，此容器默认无法被外网访问，为了避免不必要的麻烦，建议以root用户创建并运行容器。</p>\n<p>另外，run 容器的时候，请勿使用 <code>-p 0.0.0.0:9090:80</code> 这种端口映射方式，它会导致容器无法被外网访问。如果采用正常的端口映射方式 <code>-p :9090:80</code>，就没有任何问题。</p>\n<pre><code>#无法被外网访问\nsudo podman run --name phpmyadmin  --restart=always  -itd  -p 0.0.0.0:9090:80  -e PMA_HOST=10.88.0.1  phpmyadmin/phpmyadmin\n\n#可以被外网访问\nsudo podman run --name phpmyadmin  --restart=always  -itd  -p 9090:80  -e PMA_HOST=10.88.0.1  phpmyadmin/phpmyadmin\n</code></pre>"}},"persons":null,"customers":null,"products":null,"solutions":null,"tags":null,"time":"2020-08-26","downloadUrl":null}]}},"pageContext":{"slug":"podman-quickstart","breadcrumb":{"location":"/blog/podman-quickstart","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/blog","crumbLabel":"blog"},{"pathname":"/blog/podman-quickstart","crumbLabel":"podman-quickstart"}]},"language":"zh-CN","i18n":{"language":"zh-CN","languages":["en-US","zh-CN"],"defaultLanguage":"zh-CN","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/blog/podman-quickstart","path":"/blog/podman-quickstart"}}},"staticQueryHashes":["2390569662","3367695531","3666294474","3881056605","931386620"]}