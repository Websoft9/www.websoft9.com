{"componentChunkName":"component---src-templates-resource-detail-index-jsx","path":"/blog/frontend-quick-understand","result":{"data":{"locales":{"edges":[{"node":{"ns":"translation","data":"{\"Documentation\":\"文档\",\"FAQ\":\"常见问题\",\"NEXT\":\"下一页\",\"PREV\":\"上一页\",\"Product List\":\"应用列表\",\"ALL\":\"全部\",\"No relevant data found\":\"未找到相关数据\",\"Get it Now\":\"立即获取\",\"Overview\":\"概述\",\"Highlights\":\"亮点\",\"Description\":\"详情\",\"Related Applications\":\"相关应用\",\"Learning Materials\":\"学习资料\",\"Classification\":\"分类\",\"Os\":\"系统\",\"Open Source License\":\"开源许可\",\"Support Language\":\"支持语言\",\"Languages\":\"编程语言\",\"Solution\":\"场景方案\",\"Resource\":\"资源\",\"Applicable Personnel\":\"适用人员\",\"Resource List\":\"资源列表\",\"Official Website\":\"官网\",\"Feedback\":\"沟通反馈\",\"Submit A Suggestion\":\"提交此应用的建议\",\"Get Professional Services\":\"获取专业服务\",\"Tags\":\"关键词\",\"Author\":\"作者\",\"Related Reading\":\"相关阅读\",\"Resource Center\":\"资源中心\",\"Challengeg\":\"挑战\",\"How do we solve it?\":\"我们如何解决?\",\"More solution\":\"更多方案\",\"Type of asset\":\"类型\",\"Categories\":\"类别\",\"Resource Download\":\"资料下载\",\"Discover Now\":\"阅读详情\",\"Become a Partner\":\"成为伙伴\",\"Invoicing\":\"开具发票\",\"7×24 Tickets\":\"7×24 工单\",\"BROWSE ALL\":\"浏览所有\",\"Services List\":\"服务列表\",\"Service Type\":\"服务类别\",\"Service Object\":\"服务对象\",\"Content directory\":\"内容目录\",\"mo\":\"月\",\"y\":\"年\",\"Benefit\":\"好处\",\"What do we do\":\"我们怎么做\",\"Cases\":\"案例\",\"Purchase and price\":\"购买与价格\",\"Service portfolio\":\"服务组合\",\"Related Services\":\"相关服务\",\"Business insight\":\"业务洞察\",\"Components\":\"相关组件\",\"Copyright\":\"© 2022 长沙网久软件有限公司版权所有 备案：<a href='https://beian.miit.gov.cn/#/Integrated/index'>湘ICP备16009117号</a>\",\"Company summary\":\"为用户提供简单的云原生应用，帮助软件开发商构建基于全球云计算的在线商业体系\",\"Applications\":\"相关应用\",\"SHARE\":\"分享至\"}","language":"zh-CN"}}]},"site":{"siteMetadata":{"copyright":"Copyright","description":"Company summary","siteUrl":"https://www.websoft9.com","socials":[{"icon":"fab fa-github social-link-icon","id":1,"link":"https://github.com/","title":"github"},{"icon":"fab fa-twitter social-link-icon","id":2,"link":"https://www.twitter.com","title":"Twitter"},{"icon":"fab fa-instagram social-link-icon","id":3,"link":"https://www.instagram.com","title":"Instagram"},{"icon":"fab fa-linkedin social-link-icon","id":4,"link":"https://www.linkedin.com","title":"Linkedin"},{"icon":"fab fa-pinterest social-link-icon","id":5,"link":"https://pinterest.com","title":"Pinterest"}]}},"RelatedReading":{"nodes":[{"id":"bd9e2836-aedb-556f-91d5-eb23e91e8891","slug":"digtal-committee-start-changsha","title":"数字经济专业委员会在长沙成立，Websoft9 助力传统企业转型","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/blog/2022/10/digtal-commit-start-cs.jpg","type":{"id":"c0003798-cdad-534f-af28-121e7d8278cb","key":"news","title":"新闻"}},{"id":"045c8c29-4e09-5f29-bbed-b29d211615fb","slug":"software-supply-chain","title":"软件供应链","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/softwarescm-feature-websoft9.png","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}},{"id":"17c4039d-5e09-55dc-9bc8-c19dfb8eff6c","slug":"open-knowledge-base","title":"知识协作","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/open-km-hero-websoft9.webp","type":{"id":"ffbb8d0c-2d15-5add-9a32-4e36e353a203","key":"solution","title":"解决方案"}}]},"allContentfulResource":{"nodes":[{"id":"2b905f08-e8f2-54f7-aec6-886b0686e96e","slug":"frontend-quick-understand","title":"网站前端技术之通俗理解","description":null,"image":null,"type":{"id":"0a810898-e829-5004-8809-ea2fb20621d4","key":"blog","title":"博客"},"author":[{"id":"8dce9d8a-0d75-5062-a1d6-75d09e764908","title":"CEO","fullName":"Websoft9","pictureUrl":"https://libs.websoft9.com/Websoft9/logo/person/cdl.jpeg","customer":null}],"content":{"id":"21d2765c-0d0b-541a-9fac-611e434bc1dc","content":"如今的前端技术是一个复杂的生态。\n\n随便阅读一篇关于前端的技术文章，一定会发现大量的技术术语。什么 vue, webpack, react, Antdesign 等，各种新名词让初学者感到非常困惑，在较短的时间根本快速的理解整个前端体系，从而陷入一种低效、焦虑的学习状态。\n\n## 什么是前端？\n\n在网站技术中，前端就是用户界面，主要通过页面向用户展示内容或数据，同时用户可以自主选择需要的内容并向网站填写数据后给出反馈。\n\n前端是相对后端而言的。前+后这种分工模式，在生活中或人类的组织分工中非常常见，举例：\n\n* 电视机+机顶盒\n* 士兵+作战指挥部\n* 无人便利店+运作系统\n\n简而言之，网站的前端主要通过从后台获取数据，向用户展示数据或采集数据传送到后台\n\n## 前端技术体系\n\n以网站为例，前端的载体就是浏览器 Chrome, FireFox 等，所以前端技术自始至终都是围绕浏览器的几个基础技术进行发展：\n\n* HTML\n* CSS\n* JavaScript/ECMAScript\n\n现在流行的前端技术都是对以上基础技术进行“高级编程”，围绕界面设计、界面互动和界面体验，提供不同的软件包。\n\n比如：Vue, React, Bootstrap 等框架都是这方面的杰出代表。\n\n不管哪一种框架最终都是依赖以上技术。\n\n### UI 框架\n\nUI 框架偏重于 UI 显示的效果，其包含设计理念，所以基于同一种 UI 框架的网站其视觉效果看起来非常类似。\n\n主流的 UI 框架为：\n\n* Material Design\n* Ant Design\n* Bootsrap\n* iView\n* Element\n\n### JS 框架（交互编程）\n\n不同于 UI 框架，交互编程偏重于用户互动后的数据展示（采集）。也就是说，当你的前端页面需要根据用户的选择展示不同类型的数据的时候，就需要进行交互式编程。\n\n早期，开发者主要采用原生的 JavaScript 来实现这种交互，随着技术的演进，就诞生了专门用于交互编程的 JS 软件包框架，解决一些通用的问题，开发者能够基于这种 JS 软件包更方便的开发前端交互。\n\n主流的 JS 框架为：\n\n* jQuery\n* Vue.js\n* React\n* Angula.js\n* Ember.js\n* Meteor\n* Mithril\n* Backbone.js\n* Handlebars.js\n\n### 混合框架\n\n实际开发网站中，单单使用某一种框架并不能满足业务。\n\n比如 Vue.js 虽然能够很好的处理数据交互，但它自身却无法构造优美的界面。由于开源世界总有一些默默无闻的顶尖级程序员创造伟大的作品，所以基于主流的 UI 和 JS 框架，产生了繁荣的生态，框架相互组合，并引入了更多的工具，又组合成新的框架。\n\n以 Vue.js 为例，产生了更多混合框架：\n\n* bootstrap-vue 即 Vue.js + Boostrap\n* Ant Design of Vue 即 Vue.js + Ant Design\n* Vuetify.js 即 Vue.js + Material Design\n* Nuxt.js 即 Vue.js 的 SSR 模式增强\n* NativeScript-Vue 即 Vue.js 移动端开发增加\n* Quasar 即 Vue.js + 编写一次代码，并同时将其部署为网站，移动应用程序和/或电子应用程序\n\n## 辅助技术\n\n还有一些很重要的技术，它们没有上升到框架的层面，也不是技术的核心，但是它们是前端应用不可或缺的重要组成部分，包括：\n\n* Node 前端引擎\n* NPM 前端软件包的安装管理器\n* Webpack 前端打包工具\n* Babel 主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法\n\n## 谈谈 Node\n\nNode 即 Node.js。\n\n前面我们提到过，浏览器是包含 JavaScript 程序的解释器的，所以它能够处理 JS 代码。 \n\nNode 区别于以上任何框架，它应该称之为 JavaScript 程序的解释器（类似虚拟机），所以它主要用于不方便调用浏览器的场景下处理 JS 代码。\n\nNode 使用场景包括：调试和构建\n\n## 总结\n\n以上的解释看起来简单明了，但实际工作中仍然需要我们自身不断地实践和总结，才能抓住根本。","childMarkdownRemark":{"html":"<p>如今的前端技术是一个复杂的生态。</p>\n<p>随便阅读一篇关于前端的技术文章，一定会发现大量的技术术语。什么 vue, webpack, react, Antdesign 等，各种新名词让初学者感到非常困惑，在较短的时间根本快速的理解整个前端体系，从而陷入一种低效、焦虑的学习状态。</p>\n<h2>什么是前端？</h2>\n<p>在网站技术中，前端就是用户界面，主要通过页面向用户展示内容或数据，同时用户可以自主选择需要的内容并向网站填写数据后给出反馈。</p>\n<p>前端是相对后端而言的。前+后这种分工模式，在生活中或人类的组织分工中非常常见，举例：</p>\n<ul>\n<li>电视机+机顶盒</li>\n<li>士兵+作战指挥部</li>\n<li>无人便利店+运作系统</li>\n</ul>\n<p>简而言之，网站的前端主要通过从后台获取数据，向用户展示数据或采集数据传送到后台</p>\n<h2>前端技术体系</h2>\n<p>以网站为例，前端的载体就是浏览器 Chrome, FireFox 等，所以前端技术自始至终都是围绕浏览器的几个基础技术进行发展：</p>\n<ul>\n<li>HTML</li>\n<li>CSS</li>\n<li>JavaScript/ECMAScript</li>\n</ul>\n<p>现在流行的前端技术都是对以上基础技术进行“高级编程”，围绕界面设计、界面互动和界面体验，提供不同的软件包。</p>\n<p>比如：Vue, React, Bootstrap 等框架都是这方面的杰出代表。</p>\n<p>不管哪一种框架最终都是依赖以上技术。</p>\n<h3>UI 框架</h3>\n<p>UI 框架偏重于 UI 显示的效果，其包含设计理念，所以基于同一种 UI 框架的网站其视觉效果看起来非常类似。</p>\n<p>主流的 UI 框架为：</p>\n<ul>\n<li>Material Design</li>\n<li>Ant Design</li>\n<li>Bootsrap</li>\n<li>iView</li>\n<li>Element</li>\n</ul>\n<h3>JS 框架（交互编程）</h3>\n<p>不同于 UI 框架，交互编程偏重于用户互动后的数据展示（采集）。也就是说，当你的前端页面需要根据用户的选择展示不同类型的数据的时候，就需要进行交互式编程。</p>\n<p>早期，开发者主要采用原生的 JavaScript 来实现这种交互，随着技术的演进，就诞生了专门用于交互编程的 JS 软件包框架，解决一些通用的问题，开发者能够基于这种 JS 软件包更方便的开发前端交互。</p>\n<p>主流的 JS 框架为：</p>\n<ul>\n<li>jQuery</li>\n<li>Vue.js</li>\n<li>React</li>\n<li>Angula.js</li>\n<li>Ember.js</li>\n<li>Meteor</li>\n<li>Mithril</li>\n<li>Backbone.js</li>\n<li>Handlebars.js</li>\n</ul>\n<h3>混合框架</h3>\n<p>实际开发网站中，单单使用某一种框架并不能满足业务。</p>\n<p>比如 Vue.js 虽然能够很好的处理数据交互，但它自身却无法构造优美的界面。由于开源世界总有一些默默无闻的顶尖级程序员创造伟大的作品，所以基于主流的 UI 和 JS 框架，产生了繁荣的生态，框架相互组合，并引入了更多的工具，又组合成新的框架。</p>\n<p>以 Vue.js 为例，产生了更多混合框架：</p>\n<ul>\n<li>bootstrap-vue 即 Vue.js + Boostrap</li>\n<li>Ant Design of Vue 即 Vue.js + Ant Design</li>\n<li>Vuetify.js 即 Vue.js + Material Design</li>\n<li>Nuxt.js 即 Vue.js 的 SSR 模式增强</li>\n<li>NativeScript-Vue 即 Vue.js 移动端开发增加</li>\n<li>Quasar 即 Vue.js + 编写一次代码，并同时将其部署为网站，移动应用程序和/或电子应用程序</li>\n</ul>\n<h2>辅助技术</h2>\n<p>还有一些很重要的技术，它们没有上升到框架的层面，也不是技术的核心，但是它们是前端应用不可或缺的重要组成部分，包括：</p>\n<ul>\n<li>Node 前端引擎</li>\n<li>NPM 前端软件包的安装管理器</li>\n<li>Webpack 前端打包工具</li>\n<li>Babel 主要用于将 ECMAScript 2015+ 版本的代码转换为向后兼容的 JavaScript 语法</li>\n</ul>\n<h2>谈谈 Node</h2>\n<p>Node 即 Node.js。</p>\n<p>前面我们提到过，浏览器是包含 JavaScript 程序的解释器的，所以它能够处理 JS 代码。</p>\n<p>Node 区别于以上任何框架，它应该称之为 JavaScript 程序的解释器（类似虚拟机），所以它主要用于不方便调用浏览器的场景下处理 JS 代码。</p>\n<p>Node 使用场景包括：调试和构建</p>\n<h2>总结</h2>\n<p>以上的解释看起来简单明了，但实际工作中仍然需要我们自身不断地实践和总结，才能抓住根本。</p>"}},"persons":null,"customers":null,"products":null,"solutions":null,"tags":null,"time":"2020-08-28","downloadUrl":null}]}},"pageContext":{"slug":"frontend-quick-understand","breadcrumb":{"location":"/blog/frontend-quick-understand","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/blog","crumbLabel":"blog"},{"pathname":"/blog/frontend-quick-understand","crumbLabel":"frontend-quick-understand"}]},"language":"zh-CN","i18n":{"language":"zh-CN","languages":["en-US","zh-CN"],"defaultLanguage":"zh-CN","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/blog/frontend-quick-understand","path":"/blog/frontend-quick-understand"}}},"staticQueryHashes":["2390569662","3367695531","3666294474","3881056605","931386620"]}