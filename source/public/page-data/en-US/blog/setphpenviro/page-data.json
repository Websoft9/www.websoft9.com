{"componentChunkName":"component---src-templates-resource-detail-index-jsx","path":"/en-US/blog/setphpenviro","result":{"data":{"locales":{"edges":[{"node":{"ns":"translation","data":"{\"Documentation\":\"Documentation\",\"FAQ\":\"FAQ\",\"NEXT\":\"NEXT\",\"PREV\":\"PREV\",\"Product List\":\"Applications\",\"ALL\":\"ALL\",\"No relevant data found\":\"No relevant data found\",\"Get it Now\":\"Get it Now\",\"Overview\":\"Overview\",\"Highlights\":\"Highlights\",\"Description\":\"Description\",\"Related Applications\":\"Related Applications\",\"Learning Materials\":\"Learning Materials\",\"Classification\":\"Classification\",\"Os\":\"Os\",\"Open Source License\":\"Open Source License\",\"Support Language\":\"Support Language\",\"Languages\":\"Languages\",\"Solution\":\"Solution\",\"Resource\":\"Resource\",\"Applicable Personnel\":\"Applicable Personnel\",\"Resource List\":\"Resource List\",\"Official Website\":\"Official Website\",\"Feedback\":\"Feedback\",\"Submit A Suggestion\":\"Submit A Suggestion\",\"Get Professional Services\":\"Get Professional Services\",\"Tags\":\"Tags\",\"Author\":\"Author\",\"Related Reading\":\"Related Reading\",\"Resource Center\":\"Resource Center\",\"Challengeg\":\"Challengeg\",\"How do we solve it?\":\"How do we solve it?\",\"More solution\":\"More solution\",\"Type of asset\":\"Type of asset\",\"Categories\":\"Categories\",\"Resource Download\":\"Resource Download\",\"Discover Now\":\"Discover Now\",\"Become a Partner\":\"Become a Partner\",\"Invoicing\":\"Invoicing\",\"7×24 Tickets\":\"7×24 Tickets\",\"BROWSE ALL\":\"BROWSE ALL\",\"Services List\":\"Services List\",\"Service Type\":\"Service Type\",\"Service Object\":\"Service Object\",\"Content directory\":\"Content directory\",\"mo\":\"mo\",\"y\":\"y\",\"Benefit\":\"Benefit\",\"What do we do\":\"What do we do\",\"Cases\":\"Cases\",\"Purchase and price\":\"Purchase and price\",\"Service portfolio\":\"Service portfolio\",\"Related Services\":\"Related Services\",\"Business insight\":\"Business insight\",\"Components\":\"Components\",\"Copyright\":\"© 2022 Websoft9. All Rights Reserved.\",\"Company summary\":\"Provide users with simple serial applications to help software operators create global cloud-based online business commerce\",\"Applications\":\"Applications\",\"SHARE\":\"SHARE\"}","language":"en-US"}}]},"site":{"siteMetadata":{"copyright":"Copyright","description":"Company summary","siteUrl":"https://www.websoft9.com","socials":[{"icon":"fab fa-github social-link-icon","id":1,"link":"https://github.com/","title":"github"},{"icon":"fab fa-twitter social-link-icon","id":2,"link":"https://www.twitter.com","title":"Twitter"},{"icon":"fab fa-instagram social-link-icon","id":3,"link":"https://www.instagram.com","title":"Instagram"},{"icon":"fab fa-linkedin social-link-icon","id":4,"link":"https://www.linkedin.com","title":"Linkedin"},{"icon":"fab fa-pinterest social-link-icon","id":5,"link":"https://pinterest.com","title":"Pinterest"}]}},"RelatedReading":{"nodes":[{"id":"b04cd64d-6a5a-5489-ad4f-902ddefae040","slug":"digtal-committee-start-changsha","title":"数字经济专业委员会在长沙成立，Websoft9 助力传统企业转型","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/blog/2022/10/digtal-commit-start-cs.jpg","type":{"id":"53d881b6-0253-56d0-b8de-0d06d834b608","key":"news","title":"News"}},{"id":"d56d83d8-db66-52f6-b1b1-00e894db4e02","slug":"software-supply-chain","title":"Software Supply Chain","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/softwarescm-feature-websoft9.png","type":{"id":"f26470e4-249e-5966-b8fb-d7e620a71e65","key":"solution","title":"Solution"}},{"id":"6dea9576-1832-5aa0-8ef1-8d51867af2d9","slug":"open-knowledge-base","title":"Open knowledge base","time":null,"image":"https://libs.websoft9.com/Websoft9/resource/solution/open-km-hero-websoft9.webp","type":{"id":"f26470e4-249e-5966-b8fb-d7e620a71e65","key":"solution","title":"Solution"}}]},"allContentfulResource":{"nodes":[{"id":"8911541a-9877-506c-9e63-87a332ec1d8c","slug":"setphpenviro","title":"浅析php环境配置","description":null,"image":null,"type":{"id":"7fcfc4bf-1c58-5656-ae8a-2bea41e47111","key":"blog","title":"Blog"},"author":[{"id":"57d53346-00d0-5b5e-9497-22ea3517bfbe","title":"CEO","fullName":"Websoft9","pictureUrl":"https://libs.websoft9.com/Websoft9/logo/person/cdl.jpeg","customer":null}],"content":{"id":"09a382c9-4630-502f-a0c2-b65948dcf120","content":"[PHP](https://www.php.net/)作为开源的服务器端脚本语言，在web应用方面非常广泛。如果你想下载某些开源应用，github上php开源软件选择往往比Java还多。最近，研究了linux下php的安装，主要有以下体会。\n\n## PHP-INI\n\nphp.ini文件是php的核心配置文件且只能命名为php.ini,它是对php应用程序全局起作用的设置文件，里面选项非常多，包含php页面使用内存大小限制，上传下载文件大小限制，浮点型的精度等。\n\n## FPM-PHP\n\nfpm-php(FastCGI ProcessManager)本来是php的第三方包，在php5.3.3后成为了php的核心成员，不需要单独下载安装。FastCGI诞生之前，web端转发一个php请求后，需要重新加载php.ini，通过fpm-php创建master进程，收到多个php请求，创建子进程来共享master进程加载的php.ini信息。安装fpm-php后，启动php实际上通过启动的fpm-php.service来实现。fpm-php和web之间的通信可以通过两种方式实现，socket和tcp方式，通过/etc/php-fpm.d/www.conf的配置来配置。两种方式的差异主要在listen的配置不一样。一个是php-fpm.sock，一个是服务器的ip:9000。\n\nsocket方式是长连接方式，适用于php和其他服务在同一台服务器上\n```\n[www]\nuser = nginx\ngroup = nginx\nlisten = /run/php-fpm.sock\n\n```\ntcp方式是http请求方式，适用于集群并发量高的多服务器上\n```\n[www]\nuser = nginx\ngroup = nginx\nlisten = 127.0.0.1:9000\n\n```\n\n再谈进程如何分配，以下面配置来说，start_servers=10说明php服务就启动10个worker子进程一直处于等待中，min_spare_servers=5是指最小活动进程。php启动时开启8个进程，如果没有收到web请求，fpm-php就会释放一些，最终达到5个进程。但是最大不能超过max_spare_servers = 35。至于max_children=50，那是静态配置方式，不变的，是一种浪费资源的方式，一直启动50个进程再那里等待，即使网站应用没有一个人访问也是一样。\n```\npm.max_children = 50\npm.start_servers = 10\npm.min_spare_servers = 5\npm.max_spare_servers = 35\n```\n\n## 扩展包\n仅安装php往往不能满足应用软件的需求，还需要其他很多扩展包来支持php应用。例如，【odbc，common，ima，mongodb，xml等】，但是需要注意的是安装的时候下面这些包是基于pecl的【apcu,imagick,goeip,mcrypt,redis,zip,memcache】。尤其，zip包特别需要指定pecl，否则扩展包安装不成功，其他pecl包可以从remi源中自动找到响应包。\n\n```\nyum install php-common\nyum install php-apcu\nyum install php-pecl-zip\n\n```\n\n## web服务器相关配置\n\nphp和web服务器nginx，apache还需要做一些关联配置，在他们的配置文件里面加入以下：\n\n```\nnginx：\nlocation ~ .*\\.php$\n{\n    fastcgi_pass  unix:/run/php-fpm.sock;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    include fastcgi_params;\n    try_files $uri = 404;\n}\n\napache：\n<FilesMatch \\.php$>\n  SetHandler \"proxy:unix:/run/php-fpm.sock|fcgi://localhost\"\n</FilesMatch>\n```\n但是，ubuntu系统下PHP应用使用apache服务器的情况下，需要配置，否则相反apache服务器报错无法启动。以上对php的配置理解，今后随着对它研究的加深，还会写一些关于php新的东西。","childMarkdownRemark":{"html":"<p><a href=\"https://www.php.net/\">PHP</a>作为开源的服务器端脚本语言，在web应用方面非常广泛。如果你想下载某些开源应用，github上php开源软件选择往往比Java还多。最近，研究了linux下php的安装，主要有以下体会。</p>\n<h2>PHP-INI</h2>\n<p>php.ini文件是php的核心配置文件且只能命名为php.ini,它是对php应用程序全局起作用的设置文件，里面选项非常多，包含php页面使用内存大小限制，上传下载文件大小限制，浮点型的精度等。</p>\n<h2>FPM-PHP</h2>\n<p>fpm-php(FastCGI ProcessManager)本来是php的第三方包，在php5.3.3后成为了php的核心成员，不需要单独下载安装。FastCGI诞生之前，web端转发一个php请求后，需要重新加载php.ini，通过fpm-php创建master进程，收到多个php请求，创建子进程来共享master进程加载的php.ini信息。安装fpm-php后，启动php实际上通过启动的fpm-php.service来实现。fpm-php和web之间的通信可以通过两种方式实现，socket和tcp方式，通过/etc/php-fpm.d/<a href=\"http://www.conf%E7%9A%84%E9%85%8D%E7%BD%AE%E6%9D%A5%E9%85%8D%E7%BD%AE%E3%80%82%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%9A%84%E5%B7%AE%E5%BC%82%E4%B8%BB%E8%A6%81%E5%9C%A8listen%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8D%E4%B8%80%E6%A0%B7%E3%80%82%E4%B8%80%E4%B8%AA%E6%98%AFphp-fpm.sock%EF%BC%8C%E4%B8%80%E4%B8%AA%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84ip:9000%E3%80%82\">www.conf的配置来配置。两种方式的差异主要在listen的配置不一样。一个是php-fpm.sock，一个是服务器的ip:9000。</a></p>\n<p>socket方式是长连接方式，适用于php和其他服务在同一台服务器上</p>\n<pre><code>[www]\nuser = nginx\ngroup = nginx\nlisten = /run/php-fpm.sock\n\n</code></pre>\n<p>tcp方式是http请求方式，适用于集群并发量高的多服务器上</p>\n<pre><code>[www]\nuser = nginx\ngroup = nginx\nlisten = 127.0.0.1:9000\n\n</code></pre>\n<p>再谈进程如何分配，以下面配置来说，start_servers=10说明php服务就启动10个worker子进程一直处于等待中，min_spare_servers=5是指最小活动进程。php启动时开启8个进程，如果没有收到web请求，fpm-php就会释放一些，最终达到5个进程。但是最大不能超过max_spare_servers = 35。至于max_children=50，那是静态配置方式，不变的，是一种浪费资源的方式，一直启动50个进程再那里等待，即使网站应用没有一个人访问也是一样。</p>\n<pre><code>pm.max_children = 50\npm.start_servers = 10\npm.min_spare_servers = 5\npm.max_spare_servers = 35\n</code></pre>\n<h2>扩展包</h2>\n<p>仅安装php往往不能满足应用软件的需求，还需要其他很多扩展包来支持php应用。例如，【odbc，common，ima，mongodb，xml等】，但是需要注意的是安装的时候下面这些包是基于pecl的【apcu,imagick,goeip,mcrypt,redis,zip,memcache】。尤其，zip包特别需要指定pecl，否则扩展包安装不成功，其他pecl包可以从remi源中自动找到响应包。</p>\n<pre><code>yum install php-common\nyum install php-apcu\nyum install php-pecl-zip\n\n</code></pre>\n<h2>web服务器相关配置</h2>\n<p>php和web服务器nginx，apache还需要做一些关联配置，在他们的配置文件里面加入以下：</p>\n<pre><code>nginx：\nlocation ~ .*\\.php$\n{\n    fastcgi_pass  unix:/run/php-fpm.sock;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n    include fastcgi_params;\n    try_files $uri = 404;\n}\n\napache：\n&#x3C;FilesMatch \\.php$>\n  SetHandler \"proxy:unix:/run/php-fpm.sock|fcgi://localhost\"\n&#x3C;/FilesMatch>\n</code></pre>\n<p>但是，ubuntu系统下PHP应用使用apache服务器的情况下，需要配置，否则相反apache服务器报错无法启动。以上对php的配置理解，今后随着对它研究的加深，还会写一些关于php新的东西。</p>"}},"persons":null,"customers":null,"products":null,"solutions":null,"tags":null,"time":"2020-09-07","downloadUrl":null}]}},"pageContext":{"slug":"setphpenviro","breadcrumb":{"location":"/en-US/blog/setphpenviro","crumbs":[{"pathname":"/","crumbLabel":"Home"},{"pathname":"/en-US","crumbLabel":"en-US"},{"pathname":"/en-US/blog","crumbLabel":"blog"},{"pathname":"/en-US/blog/setphpenviro","crumbLabel":"setphpenviro"}]},"language":"en-US","i18n":{"language":"en-US","languages":["en-US","zh-CN"],"defaultLanguage":"zh-CN","generateDefaultLanguagePage":false,"routed":true,"originalPath":"/blog/setphpenviro","path":"en-US/blog/setphpenviro"}}},"staticQueryHashes":["2390569662","3367695531","3666294474","3881056605","931386620"]}